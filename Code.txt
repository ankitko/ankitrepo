import boto3
import json
import uuid

# Replace these with your actual AWS credentials
aws_access_key = 'YOUR_ACCESS_KEY'
aws_secret_key = 'YOUR_SECRET_KEY'
region_name = 'us-east-1'  # Replace with your desired region
role_name = 'your-role-name'  # Replace with the IAM role name you want to fetch information for

# Initialize the Boto3 IAM client
iam_client = boto3.client(
    'iam',
    aws_access_key_id=aws_access_key,
    aws_secret_access_key=aws_secret_key,
    region_name=region_name
)

# Fetch information about the IAM role
try:
    role_response = iam_client.get_role(RoleName=role_name)
    role_info = role_response['Role']
    
    # Generate a UUID
    generated_uuid = str(uuid.uuid4())

    # Fetch attached policies
    attached_policies_response = iam_client.list_attached_role_policies(RoleName=role_name)
    attached_policies = attached_policies_response['AttachedPolicies']
    attached_policy_names = [policy['PolicyName'] for policy in attached_policies]

    # Fetch trust relationship data (assume role policy)
    assume_role_policy = json.loads(role_info['AssumeRolePolicyDocument'])

    # Fetch inline policies
    inline_policies_response = iam_client.list_role_policies(RoleName=role_name)
    inline_policy_names = inline_policies_response['PolicyNames']
    inline_policy_data = {}
    for policy_name in inline_policy_names:
        inline_policy_response = iam_client.get_role_policy(RoleName=role_name, PolicyName=policy_name)
        inline_policy_document = inline_policy_response['PolicyDocument']
        inline_policy_data[policy_name] = inline_policy_document

    # Create the final JSON structure
    result = {
        "uuid": generated_uuid,
        "managed_policy_names": attached_policy_names,
        "assume_role_policy_data": assume_role_policy,
        "inline_policy_data": inline_policy_data
    }

    # Write the JSON to a file
    output_file_path = 'iam_role_info.json'
    with open(output_file_path, 'w') as output_file:
        json.dump(result, output_file, indent=2)

    print(f"Role information saved to {output_file_path}")

except Exception as e:
    print("An error occurred:", e)
